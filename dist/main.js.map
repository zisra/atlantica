{"mappings":"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","sources":["lib/index.js"],"sourcesContent":["import { join } from 'node:path';\nimport { request as httpRequest } from 'node:http';\nimport { request as httpsRequest } from 'node:https';\nimport { URL } from 'node:url';\n\nconst typeOf = (obj) => {\n\treturn {}.toString.call(obj).split(' ')[1].slice(0, -1).toLowerCase();\n};\n\nclass Request {\n\tconstructor(url, options) {\n\t\tthis.options = { ...options };\n\n\t\tif (url) this.options.url = new URL(url);\n\t\tif (options?.url) this.options.url = new URL(options.url);\n\n\t\tthis.options.query = options?.query;\n\t\tif (options?.path)\n\t\t\tthis.options.url.pathname = join(this.options.url.pathname, options.path);\n\t\tthis.options.method = options?.method;\n\t\tthis.options.headers = options?.headers ?? {};\n\t\tthis.options.body = options?.body;\n\t\tthis.options.timeout = options?.timeout;\n\t\tthis.options.maxRedirects = options?.maxRedirects; // TODO: Implement redirects\n\t\tthis.options.response = options?.response;\n\t\tthis.options.maxSize = options?.maxSize;\n\t\treturn this;\n\t}\n\n\tset(options) {\n\t\tif (options?.url) this.options.url = new URL(options.url);\n\n\t\tthis.options.query = options?.query;\n\t\tif (options?.path)\n\t\t\tthis.options.url.pathname = join(this.options.url.pathname, options.path);\n\t\tthis.options.method = options?.method;\n\t\tthis.options.headers = options?.headers ?? {};\n\t\tthis.options.body = options?.body;\n\t\tthis.options.timeout = options?.timeout;\n\t\tthis.options.maxRedirects = options?.maxRedirects;\n\t\tthis.options.response = options?.response;\n\t\tthis.options.maxSize = options?.maxSize;\n\t\treturn this;\n\t}\n\n\turl(option) {\n\t\tthis.options.url = new URL(option);\n\n\t\treturn this;\n\t}\n\n\tpath(option) {\n\t\tthis.options.url.pathname = join(this.options.url.pathname, option);\n\n\t\treturn this;\n\t}\n\n\tquery(option) {\n\t\tif (typeOf(option) === 'object') {\n\t\t\tthis.options.query = { ...option, ...this.options.query };\n\t\t} else if (typeOf(option) === 'function') {\n\t\t\tthis.options.query = { ...option, ...option(new Query(this)).toJSON() };\n\t\t}\n\t\treturn this;\n\t}\n\n\tbody(option) {\n\t\tthis.options.body = option;\n\n\t\treturn this;\n\t}\n\n\ttimeout(option) {\n\t\tthis.options.timeout = option;\n\t\treturn this;\n\t}\n\n\tmaxRedirects(option) {\n\t\tthis.options.maxRedirects = option;\n\t\treturn this;\n\t}\n\n\tresponse(option) {\n\t\tthis.options.response = option;\n\n\t\treturn this;\n\t}\n\n\tmaxSize(option) {\n\t\tthis.options.maxSize = option;\n\n\t\treturn this;\n\t}\n\n\theaders(option) {\n\t\tif (typeOf(option) === 'object') {\n\t\t\tthis.options.headers = { ...option, ...this.options.headers };\n\t\t} else if (typeOf(option) === 'function') {\n\t\t\tthis.options.headers = {\n\t\t\t\t...option,\n\t\t\t\t...option(new Headers(this)).toJSON(),\n\t\t\t};\n\t\t}\n\t\treturn this;\n\t}\n\n\tsend() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (this.options.body) {\n\t\t\t\tif (!this.options.headers.hasOwnProperty('content-type')) {\n\t\t\t\t\tif (typeOf(this.options.body) === 'object') {\n\t\t\t\t\t\tthis.options.body = JSON.stringify(this.options.body);\n\t\t\t\t\t\tthis.options.headers['content-type'] = 'application/json';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!this.options.headers.hasOwnProperty('content-length')) {\n\t\t\t\t\tthis.options.headers['content-length'] = Buffer.byteLength(\n\t\t\t\t\t\tthis.options.body\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst url = this.options.url;\n\n\t\t\tif (!url) throw new Error('No URL provided to the request');\n\n\t\t\tconst options = {\n\t\t\t\thostname: url.hostname.replace('[', '').replace(']', ''),\n\t\t\t\tport: url.port,\n\t\t\t\tpath: `${url.pathname}${\n\t\t\t\t\tthis.options.query ? new Query(this.options.query) : ''\n\t\t\t\t}`,\n\t\t\t\tmethod: this.options.method ? this.options.method.toUpperCase() : 'GET',\n\t\t\t\theaders: this.options.headers,\n\t\t\t};\n\n\t\t\tlet response;\n\t\t\tlet request;\n\n\t\t\tconst resHandler = (stream) => {\n\t\t\t\tif (this.options.response == 'stream') {\n\t\t\t\t\tresolve(stream);\n\t\t\t\t} else {\n\t\t\t\t\tresponse = new ResponseData(stream, options, {\n\t\t\t\t\t\tresponseType: this.options.response ?? 'full',\n\t\t\t\t\t\tcontentTypeHeader: stream.headers['content-type'],\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.on('error', (error) => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.on('aborted', () => {\n\t\t\t\t\t\treject(new Error('Server aborted request'));\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.on('data', (chunk) => {\n\t\t\t\t\t\tresponse.addChunk(chunk);\n\n\t\t\t\t\t\tconst byteLength = response.size();\n\t\t\t\t\t\tif (byteLength > this.options.maxSize) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t'Body over maximum size: ' + this.options.maxSize\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.on('end', () => {\n\t\t\t\t\t\tresolve(response.toJSON());\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (url.protocol === 'http:') {\n\t\t\t\trequest = httpRequest(options, resHandler);\n\t\t\t} else if (url.protocol === 'https:') {\n\t\t\t\trequest = httpsRequest(options, resHandler);\n\t\t\t}\n\n\t\t\tif (this.options.timeout) {\n\t\t\t\trequest.setTimeout(this.options.timeout, () => {\n\t\t\t\t\trequest.abort();\n\n\t\t\t\t\tif (this.options.response !== 'stream') {\n\t\t\t\t\t\treject(new Error('Timeout reached'));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trequest.on('error', (error) => {\n\t\t\t\treject(error);\n\t\t\t});\n\n\t\t\tif (this.options.body) request.write(this.options.body);\n\n\t\t\trequest.end();\n\t\t});\n\t}\n}\n\nclass Headers {\n\tconstructor() {\n\t\tthis.headers = new Map();\n\n\t\treturn this;\n\t}\n\n\tadd(options) {\n\t\tif (typeOf(options) === 'object') {\n\t\t\tfor (let item in options) {\n\t\t\t\tthis.headers.set(item, options[item]);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error('Invalid headers');\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tremove(name) {\n\t\tthis.headers.delete(name);\n\n\t\treturn this;\n\t}\n\n\tset(...options) {\n\t\tif (typeOf(options[0]) === 'object') {\n\t\t\tthis.headers.set(options[0].name, options[0].value);\n\t\t} else if (typeOf(options[0]) === 'string') {\n\t\t\tthis.headers.set(options[0], options[1]);\n\t\t} else {\n\t\t\tthrow new Error('Invalid headers');\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tclear(name) {\n\t\tthis.headers = new Map();\n\n\t\treturn this;\n\t}\n\n\ttoJSON() {\n\t\treturn Object.fromEntries(this.headers);\n\t}\n\n\tget(name) {\n\t\treturn this.headers.get(name);\n\t}\n\n\ttoString() {\n\t\tconst JSONHeaders = this.toJSON();\n\t\tlet headers = [];\n\t\tfor (let item in JSONHeaders) {\n\t\t\theaders.push(`${item}: ${JSONHeaders[item]}`);\n\t\t}\n\t\treturn headers.join('\\r');\n\t}\n}\n\nclass Query {\n\tconstructor() {\n\t\tthis.query = new Map();\n\n\t\treturn this;\n\t}\n\n\tadd(options) {\n\t\tif (typeOf(options) === 'object') {\n\t\t\tfor (let item in options) {\n\t\t\t\tthis.query.set(item, options[item]);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error('Invalid query');\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tremove(name) {\n\t\tthis.query.delete(name);\n\n\t\treturn this;\n\t}\n\n\tset(...options) {\n\t\tif (typeOf(options[0]) === 'object') {\n\t\t\tthis.query.set(options[0].name, options[0].value);\n\t\t} else if (typeOf(options[0]) === 'string') {\n\t\t\tthis.query.set(options[0], options[1]);\n\t\t} else {\n\t\t\tthrow new Error('Invalid query');\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tclear(name) {\n\t\tthis.query = new Map();\n\n\t\treturn this;\n\t}\n\n\ttoJSON() {\n\t\treturn Object.fromEntries(this.query);\n\t}\n\n\tget(name) {\n\t\treturn this.query.get(name);\n\t}\n\n\ttoString() {\n\t\tconst queryJSON = this.toJSON();\n\t\tlet query = [];\n\n\t\tfor (let item in queryJSON) {\n\t\t\tquery.push(`${item}=${queryJSON[item]}`);\n\t\t}\n\n\t\tif (query.length === 0) return '';\n\t\treturn '?' + query.join('&');\n\t}\n}\n\nclass ResponseData {\n\tconstructor(res, req, options) {\n\t\tthis.res = res;\n\t\tthis.responseType = options.responseType ?? 'full';\n\t\tthis.req = req;\n\t\tthis.headers = res.headers;\n\t\tthis.statusCode = res.statusCode;\n\t\tthis.statusMessage = res.statusMessage;\n\t\tthis.res = res;\n\t\tthis.contentTypeHeader = options.contentTypeHeader;\n\t\tthis.body = options.responseType === 'bufferArray' ? [] : Buffer.alloc(0);\n\t}\n\n\taddChunk(chunk) {\n\t\tif (this.responseType === 'bufferArray') {\n\t\t\tthis.body.push(chunk);\n\t\t} else {\n\t\t\tthis.body = Buffer.concat([this.body, chunk]);\n\t\t}\n\t}\n\n\ttoJSON() {\n\t\tif (this.responseType === 'full') {\n\t\t\treturn {\n\t\t\t\tres: this.res,\n\t\t\t\treq: this.req,\n\t\t\t\theaders: this.headers,\n\t\t\t\tstatusCode: this.statusCode,\n\t\t\t\tstatusMessage: this.statusMessage,\n\t\t\t\tbody: this.body,\n\t\t\t};\n\t\t} else if (this.responseType === 'json') {\n\t\t\treturn JSON.parse(this.body);\n\t\t} else if (this.responseType === 'text') {\n\t\t\treturn this.body.toString('utf8');\n\t\t} else if (this.responseType === 'buffer') {\n\t\t\treturn Buffer.from(this.body, 'utf8');\n\t\t} else if (this.responseType === 'arrayBuffer') {\n\t\t\treturn new Uint8Array(this.body).buffer;\n\t\t} else if (this.responseType === 'bufferArray') {\n\t\t\treturn this.body;\n\t\t} else if (this.responseType === 'blob') {\n\t\t\treturn new Blob(this.body, {\n\t\t\t\ttype: this.contentTypeHeader.split(';')[0],\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error('Invalid response type');\n\t\t}\n\t}\n\n\tsize() {\n\t\treturn Buffer.byteLength(this.body);\n\t}\n\n\tdata = () => {\n\t\treturn this.body;\n\t};\n}\nexport { Request, Headers, Query, ResponseData };\n"],"names":[],"version":3,"file":"main.js.map"}